name: Solar System Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/**'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    strategy:
      matrix:
        os: [ubuntu-latest]
        version: [19]
        include:
          - os: ubuntu-latest
            version: 18
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup NodeJS Version - ${{ matrix.version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.version }}
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      with:
            # npm cache files are stored in `~/.npm` on Linux/macOS
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
    - name: Install Dependencies
      run: npm install

    - name: Unit Testing
      id: nodejs_unit_testing
      run: npm test

    - name: uploading the artifact 
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: mohca-test-results-artifact-${{ matrix.version }}-${{ matrix.os }}
        path: test-results.xml # or path/to/artifact
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version - 18
        uses: actions/setup-node@v3
        with:
            node-version: 18

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm install

      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test Result
        
        uses: actions/upload-artifact@v3
        with:
            name: Code-Coverage-Result
            path: coverage
            retension-days: 5
  docker:
    name: Containerization
    needs: [unit-testing, code-coverage]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Dockerhub Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Build For Testing
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
        
      - name: Docker Image Testing
        run: |
            docker images
            docker run --name solar-system-app -d \
              -p 3000:3000 \
              -e MONGO_URI=${MONGO_URI} \
              -e MONGO_USERNAME=${MONGO_USERNAME} \
              -e MONGO_PASSWORD=${MONGO_PASSWORD} \
              ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
            
            export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
            echo $IP
        
            echo Testing Image URL using wget
            wget -q -O - http://127.0.0.1:3000/live | grep live
      - name: Docker Build For Testing
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}
